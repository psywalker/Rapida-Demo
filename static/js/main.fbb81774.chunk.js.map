{"version":3,"sources":["components/Number/index.js","components/GameFields/GameFieldBig.js","components/GameFields/GameFieldSmall.js","components/GameItems/GameItemField/index.js","components/GameItems/GameItemText/index.js","initialStates/fieldsState.js","selectors/selectors.js","components/GameContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["Number","_ref","id","type","press","handleBtnPress","classBtn","handleBtn","btnPress","react_default","a","createElement","className","onClick","onTouchStart","onTouchEnd","GameFieldBig","bigFieldArr","btnPressBigArr","map","item","flag","length","some","elem","components_Number","key","GameFieldSmall","smallFieldArr","btnPressSmallArr","GameItemField","handleResult","btnPressLengthFlag","handleGeneratedNumbers","GameFields_GameFieldBig","GameFields_GameFieldSmall","value","disabled","GameItemText","randomBigArr","randomSmallArr","win","bigResultCount","smallResultCount","resultFlag","textResult","fieldSmallState","count","max","fieldBigState","getInitionalBtnArr","num","Array","from","v","k","getNewStateArr","arr","action","newStateArr","Object","toConsumableArray","concat","filter","field","getActionPressNum","bol","latest","getRandomInt","min","array","tmp","cur","top","Math","random","shuffle","slice","getGameResult","smallArr","bigArr","smallArrMax","bigArrMax","every","el","includes","getPressBtnState","latestNumberBig","latestNumberSmall","bigMax","smallMax","newArr","GameContainer","state","queryDataFlag","_this$state","_this","newArrObj","setState","queryTimeOut","_this$state2","timeOutCount","handleGetGameResult","handleQueryData","queryData","selectedNumber","firstField","secondField","isTicketWon","axios","post","then","res","console","log","data","catch","error","clearTimeout","setTimeout","latBig","latSmall","handleQueryPopupToggle","_this$state3","this","GameItems_GameItemField","GameItems_GameItemText","Component","App","components_GameContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbb81774.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Number = ({ id, type, press, handleBtnPress }) => {\r\n  const classBtn = press\r\n    ? \"game-field-list__btn game-field-list__btn_press\"\r\n    : \"game-field-list__btn \";\r\n\r\n  const handleBtn = () => {\r\n    if (!handleBtnPress) return false;\r\n    const action = {\r\n      id,\r\n      type,\r\n      btnPress: !press\r\n    };\r\n\r\n    handleBtnPress(action);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-field-list__item\">\r\n      <button\r\n        onClick={handleBtn}\r\n        onTouchStart={handleBtn}\r\n        onTouchEnd={handleBtn}\r\n        type=\"button\"\r\n        className={classBtn}\r\n      >\r\n        {id}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Number;\r\n","import React from \"react\";\r\nimport Number from \"components/Number\";\r\nimport \"./style.scss\";\r\n\r\nconst GameFieldBig = ({ bigFieldArr, handleBtnPress, btnPressBigArr }) => {\r\n  return (\r\n    <div className=\"game-field\">\r\n      <h3 className=\"game-field__title\">\r\n        <b>Поле 1</b> отметьте 8 чисел\r\n      </h3>\r\n\r\n      <ul className=\"game-field-list\">\r\n        {bigFieldArr.map(item => {\r\n          const flag = btnPressBigArr.length\r\n            ? btnPressBigArr.some(elem => elem === item)\r\n            : false;\r\n          return (\r\n            <Number\r\n              id={item}\r\n              key={item}\r\n              type=\"fieldBig\"\r\n              press={flag}\r\n              handleBtnPress={handleBtnPress}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFieldBig;\r\n","import React from \"react\";\r\nimport Number from \"components/Number\";\r\nimport \"./style.scss\";\r\n\r\nconst GameFieldSmall = ({\r\n  smallFieldArr,\r\n  handleBtnPress,\r\n  btnPressSmallArr\r\n}) => {\r\n  return (\r\n    <div className=\"game-field\">\r\n      <h3 className=\"game-field__title\">\r\n        <b>Поле 2</b> отметьте 1 число\r\n      </h3>\r\n      <ul className=\"game-field-list\">\r\n        {smallFieldArr.map(item => {\r\n          const flag = btnPressSmallArr.length\r\n            ? btnPressSmallArr.some(elem => elem === item)\r\n            : false;\r\n          return (\r\n            <Number\r\n              id={item}\r\n              key={item}\r\n              type=\"fieldSmall\"\r\n              press={flag}\r\n              handleBtnPress={handleBtnPress}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFieldSmall;\r\n","import React from \"react\";\r\nimport GameFieldBig from \"components/GameFields/GameFieldBig\";\r\nimport GameFieldSmall from \"components/GameFields/GameFieldSmall\";\r\nimport \"../style.scss\";\r\n\r\nconst GameItemField = ({\r\n  bigFieldArr,\r\n  smallFieldArr,\r\n  handleBtnPress,\r\n  btnPressBigArr,\r\n  btnPressSmallArr,\r\n  handleResult,\r\n  btnPressLengthFlag,\r\n  handleGeneratedNumbers\r\n}) => {\r\n  return (\r\n    <div className=\"game-field-container\">\r\n      <i\r\n        onClick={handleGeneratedNumbers}\r\n        onTouchStart={handleGeneratedNumbers}\r\n        onTouchEnd={handleGeneratedNumbers}\r\n        className=\"game-field-container__icon\"\r\n      />\r\n      <h2 className=\"game-field-container__title\">Билет 1</h2>\r\n      <div className=\"game-field-container__fields\">\r\n        <GameFieldBig\r\n          bigFieldArr={bigFieldArr}\r\n          handleBtnPress={handleBtnPress}\r\n          btnPressBigArr={btnPressBigArr}\r\n        />\r\n        <GameFieldSmall\r\n          smallFieldArr={smallFieldArr}\r\n          handleBtnPress={handleBtnPress}\r\n          btnPressSmallArr={btnPressSmallArr}\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type=\"button\"\r\n        value=\"Показать результат\"\r\n        disabled={btnPressLengthFlag}\r\n        onClick={handleResult}\r\n        onTouchStart={handleResult}\r\n        onTouchEnd={handleResult}\r\n        className=\"game-field-container__result result-btn\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameItemField;\r\n","import React from \"react\";\r\nimport Number from \"components/Number\";\r\nimport \"../style.scss\";\r\n\r\nconst GameItemText = ({\r\n  randomBigArr,\r\n  randomSmallArr,\r\n  win,\r\n  btnPressBigArr,\r\n  btnPressSmallArr,\r\n  bigResultCount,\r\n  smallResultCount,\r\n  resultFlag\r\n}) => {\r\n  const textResult = win ? \"Вы победели!\" : \"Вы проиграли!\";\r\n  return (\r\n    <div className=\"game-field-container\">\r\n      {!resultFlag && (\r\n        <h2 className=\"game-field-container__title\">Результат...</h2>\r\n      )}\r\n      {resultFlag && (\r\n        <h2 className=\"game-field-container__title\">{textResult}</h2>\r\n      )}\r\n      {win && resultFlag && (\r\n        <div className=\"game-field-win\">\r\n          <p className=\"game-field-container__text\">\r\n            В <b>поле 1</b> совпало {bigResultCount} числа:\r\n          </p>\r\n\r\n          <ul className=\"game-field-list\">\r\n            {randomBigArr.map(item => (\r\n              <Number\r\n                id={item}\r\n                key={item}\r\n                type=\"fieldBig\"\r\n                press={true}\r\n                handleBtnPress={null}\r\n              />\r\n            ))}\r\n          </ul>\r\n\r\n          <p className=\"game-field-container__text\">\r\n            В <b>поле 2</b> совпало {smallResultCount} числа:\r\n          </p>\r\n          <ul className=\"game-field-list\">\r\n            {randomSmallArr.map(item => (\r\n              <Number\r\n                id={item}\r\n                key={item}\r\n                type=\"fieldBig\"\r\n                press={true}\r\n                handleBtnPress={null}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {!win && resultFlag && (\r\n        <div className=\"game-field-fail\">\r\n          <p className=\"game-field-container__text\">\r\n            В <b>поле 1</b> совпало {bigResultCount} числа:\r\n          </p>\r\n          <ul className=\"game-field-list\">\r\n            {randomBigArr.map(item => {\r\n              const flag = btnPressBigArr.length\r\n                ? btnPressBigArr.some(elem => elem === item)\r\n                : false;\r\n              return (\r\n                <Number\r\n                  id={item}\r\n                  key={item}\r\n                  type=\"fieldBig\"\r\n                  press={flag}\r\n                  handleBtnPress={null}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n          <br />\r\n          <br />\r\n          <p className=\"game-field-container__text\">\r\n            В <b>поле 2</b> совпало {smallResultCount} числа:\r\n          </p>\r\n          <ul className=\"game-field-list\">\r\n            {randomSmallArr.map(item => {\r\n              const flag = btnPressSmallArr.length\r\n                ? btnPressSmallArr.some(elem => elem === item)\r\n                : false;\r\n              return (\r\n                <Number\r\n                  id={item}\r\n                  key={item}\r\n                  type=\"fieldSmall\"\r\n                  press={flag}\r\n                  handleBtnPress={null}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameItemText;\r\n","export const fieldSmallState = {\r\n  count: 2,\r\n  max: 1\r\n};\r\n\r\nexport const fieldBigState = {\r\n  count: 19,\r\n  max: 8\r\n};\r\n","import \"core-js/features/array/from\";\r\nimport \"core-js/features/array/includes\";\r\n\r\nexport const shuffle = array => {\r\n  for (var tmp, cur, top = array.length; top--; ) {\r\n    cur = (Math.random() * (top + 1)) << 0;\r\n    tmp = array[cur];\r\n    array[cur] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getInitionalBtnArr = num =>\r\n  Array.from({ length: num }, (v, k) => ++k);\r\n\r\nexport const getNewStateArr = (arr, action) => {\r\n  let newStateArr = [...arr];\r\n  return action.btnPress\r\n    ? [...newStateArr, action.id]\r\n    : [...newStateArr].filter(field => field !== action.id);\r\n};\r\n\r\nexport const getActionPressNum = (bol, arr, max, latest) => {\r\n  let numBig = !bol ? arr.length - 1 : arr.length;\r\n  return numBig < max ? arr : arr.filter(field => field !== latest);\r\n};\r\n\r\nexport const getRandomInt = (min, max, length) => {\r\n  const arr = Array.from({ length: max - min }, (v, k) => max - k);\r\n  return shuffle(arr).slice(0, length);\r\n};\r\n\r\nexport const getGameResult = (smallArr, bigArr, smallArrMax, bigArrMax) => {\r\n  const randomBigArr = getRandomInt(0, 19, bigArrMax);\r\n  const randomSmallArr = getRandomInt(0, 2, smallArrMax);\r\n\r\n  let bigResultCount = 0;\r\n  let smallResultCount = 0;\r\n\r\n  bigArr.every(el => {\r\n    if (randomBigArr.includes(el)) {\r\n      bigResultCount++;\r\n    }\r\n    return bigArr.includes(el);\r\n  });\r\n\r\n  smallArr.every(el => {\r\n    if (randomSmallArr.includes(el)) {\r\n      smallResultCount++;\r\n    }\r\n    return smallArr.includes(el);\r\n  });\r\n\r\n  if (\r\n    (bigResultCount === 7 || bigResultCount === 8) &&\r\n    smallResultCount === 1\r\n  ) {\r\n    return {\r\n      randomBigArr,\r\n      randomSmallArr,\r\n      win: true,\r\n      bigResultCount,\r\n      smallResultCount\r\n    };\r\n  }\r\n  return {\r\n    randomBigArr,\r\n    randomSmallArr,\r\n    win: false,\r\n    bigResultCount,\r\n    smallResultCount\r\n  };\r\n};\r\n\r\nexport const getPressBtnState = (\r\n  action,\r\n  bigArr,\r\n  smallArr,\r\n  latestNumberBig,\r\n  latestNumberSmall,\r\n  bigMax,\r\n  smallMax\r\n) => {\r\n\r\n  let newArr;\r\n  switch (action.type) {\r\n    case \"fieldBig\":\r\n      newArr = getActionPressNum(\r\n        action.btnPress,\r\n        bigArr,\r\n        bigMax,\r\n        latestNumberBig\r\n      );\r\n\r\n      return { newArr, type: \"big\" };\r\n    case \"fieldSmall\":\r\n      newArr = getActionPressNum(\r\n        action.btnPress,\r\n        smallArr,\r\n        smallMax,\r\n        latestNumberSmall\r\n      );\r\n      return { newArr, type: \"small\" };\r\n    default:\r\n      return false;\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport GameItemField from \"components/GameItems/GameItemField\";\r\nimport GameItemText from \"components/GameItems/GameItemText\";\r\nimport { fieldSmallState, fieldBigState } from \"initialStates/fieldsState\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getInitionalBtnArr,\r\n  getNewStateArr,\r\n  getGameResult,\r\n  getPressBtnState,\r\n  getRandomInt\r\n} from \"selectors/selectors\";\r\nimport \"./style.scss\";\r\n\r\nclass GameContainer extends Component {\r\n  state = {\r\n    btnPressSmallArr: [],\r\n    latestNumberSmall: null,\r\n    btnPressBigArr: [],\r\n    latestNumberBig: null,\r\n    randomBigArr: [],\r\n    randomSmallArr: [],\r\n    win: false,\r\n    bigResultCount: 0,\r\n    smallResultCount: 0,\r\n    resultFlag: false,\r\n    queryDataFlag: false\r\n  };\r\n\r\n  smallFieldArr = getInitionalBtnArr(fieldSmallState.count);\r\n  bigFieldArr = getInitionalBtnArr(fieldBigState.count);\r\n\r\n  handleBtnPress = action => {\r\n    const {\r\n      btnPressBigArr,\r\n      latestNumberBig,\r\n      btnPressSmallArr,\r\n      latestNumberSmall\r\n    } = this.state;\r\n\r\n    const newArrObj = getPressBtnState(\r\n      action,\r\n      btnPressBigArr,\r\n      btnPressSmallArr,\r\n      latestNumberBig,\r\n      latestNumberSmall,\r\n      fieldBigState.max,\r\n      fieldSmallState.max\r\n    );\r\n\r\n    if (newArrObj.type === \"big\") {\r\n      this.setState({\r\n        btnPressBigArr: getNewStateArr(newArrObj.newArr, action),\r\n        latestNumberBig: action.id\r\n      });\r\n      return true;\r\n    }\r\n\r\n    this.setState({\r\n      btnPressSmallArr: getNewStateArr(newArrObj.newArr, action),\r\n      latestNumberSmall: action.id\r\n    });\r\n  };\r\n\r\n  handleResult = () => {\r\n    const { btnPressSmallArr, btnPressBigArr } = this.state;\r\n    let queryTimeOut;\r\n    let timeOutCount = 0;\r\n\r\n    const handleGetGameResult = getGameResult(\r\n      btnPressSmallArr,\r\n      btnPressBigArr,\r\n      fieldSmallState.max,\r\n      fieldBigState.max\r\n    );\r\n\r\n    const handleQueryData = () => {\r\n      const queryData = {\r\n        selectedNumber: {\r\n          firstField: btnPressBigArr,\r\n          secondField: btnPressSmallArr\r\n        },\r\n        isTicketWon: handleGetGameResult.win\r\n      };\r\n      axios\r\n        .post(\"/finch-test\", { queryData })\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n        })\r\n        .catch(error => {\r\n          if (timeOutCount === 2) {\r\n            clearTimeout(queryTimeOut);\r\n            this.setState({ queryDataFlag: true });\r\n            return false;\r\n          }\r\n          queryTimeOut = setTimeout(handleQueryData, 2000);\r\n          timeOutCount++;\r\n        });\r\n    };\r\n    handleQueryData();\r\n\r\n    this.setState({\r\n      randomBigArr: handleGetGameResult.randomBigArr,\r\n      randomSmallArr: handleGetGameResult.randomSmallArr,\r\n      win: handleGetGameResult.win,\r\n      bigResultCount: handleGetGameResult.bigResultCount,\r\n      smallResultCount: handleGetGameResult.smallResultCount,\r\n      resultFlag: true\r\n    });\r\n  };\r\n\r\n  handleGeneratedNumbers = () => {\r\n    const bigArr = getRandomInt(0, 19, fieldBigState.max),\r\n      smallArr = getRandomInt(0, 2, fieldSmallState.max),\r\n      latBig = bigArr[bigArr.length - 1],\r\n      latSmall = smallArr[smallArr.length - 1];\r\n\r\n    this.setState({\r\n      btnPressBigArr: bigArr,\r\n      latestNumberBig: latBig,\r\n      btnPressSmallArr: smallArr,\r\n      latestNumberSmall: latSmall,\r\n      resultFlag: false\r\n    });\r\n  };\r\n  handleQueryPopupToggle = () => this.setState({ queryDataFlag: false });\r\n  render() {\r\n    const {\r\n      btnPressBigArr,\r\n      btnPressSmallArr,\r\n      randomBigArr,\r\n      randomSmallArr,\r\n      win,\r\n      bigResultCount,\r\n      smallResultCount,\r\n      resultFlag,\r\n      queryDataFlag\r\n    } = this.state;\r\n\r\n    const btnPressLength = btnPressBigArr.length + btnPressSmallArr.length;\r\n    const btnPressLengthFlag =\r\n      btnPressLength < fieldSmallState.max + fieldBigState.max ? true : false;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game__item\">\r\n          {queryDataFlag && (\r\n            <div className=\"game__query game-query-popup\">\r\n              <i\r\n                onClick={this.handleQueryPopupToggle}\r\n                className=\"game-query-popup__btn-toggle\"\r\n              >\r\n                ✖\r\n              </i>\r\n              Уведомление об ошибке запроса\r\n            </div>\r\n          )}\r\n          <GameItemField\r\n            smallFieldArr={this.smallFieldArr}\r\n            bigFieldArr={this.bigFieldArr}\r\n            handleBtnPress={this.handleBtnPress}\r\n            btnPressBigArr={btnPressBigArr}\r\n            btnPressSmallArr={btnPressSmallArr}\r\n            handleResult={this.handleResult}\r\n            btnPressLengthFlag={btnPressLengthFlag}\r\n            handleGeneratedNumbers={this.handleGeneratedNumbers}\r\n          />\r\n        </div>\r\n        <div className=\"game__item\">\r\n          <GameItemText\r\n            randomBigArr={randomBigArr}\r\n            randomSmallArr={randomSmallArr}\r\n            win={win}\r\n            btnPressBigArr={btnPressBigArr}\r\n            btnPressSmallArr={btnPressSmallArr}\r\n            bigResultCount={bigResultCount}\r\n            smallResultCount={smallResultCount}\r\n            resultFlag={resultFlag}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameContainer;\r\n","import React, { Component } from \"react\";\nimport GameContainer from \"components/GameContainer\";\n\nclass App extends Component {\n  render() {\n    return <GameContainer />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}